{
  "name": "pindel",
  "title": "pindel_v1.0.0",
  "summary": "This is a copy of an applet created by DNAnexus, which implements the Pindel tool (version 0.2.5a7) for detection of structural variants (large deletions, medium sized insertions, inversions, tandem duplications, etc). https://github.com/genome/pindel/ ",
  "tags": [
    "Structural Variation"
  ],
  "properties": {
    "githubRelease":"v1.0.0"
  },
  "dxapi": "1.0.0",
  "inputSpec": [
    {
      "name": "reference_fasta",
      "label": "Reference Genome Sequence (FASTA)",
      "help": "The reference genome sequences in fasta format. App will accept compressed FASTA. REQUIRED",
      "class": "file",
      "patterns": ["*.fa*"],
      "optional": false,
      "group": "App Settings"
    },
    {
      "name": "mappings_files",
      "label": "Mappings BAM/Pindel file",
      "help": "BAM or Pindel input file(s) containing mappings you want to search for indels and structural variations. BAM files MUST have .bam extension AND either insert size or bam config file is required as additional input. REQUIRED.",
      "class": "array:file",
      "optional": false,
      "group": "App Settings"
    },
    {
      "name": "bam_config_file",
      "label": "BAM Configuration File",
      "help": "If mappings were generated by BWA/MOSAIK, it is RECOMMENDED to input a bam configuration text file containing the names (names-ONLY, no path) of the BAM-files one wants to search for indels and structural variations. Pindel performance will be faster with config file. On each line, list the name of the bam-file, the insert size (length of sequence between the paired-end adapters in paired-end sequence), and the label for the sample. Example: \ntumor_sample.bam\t250\tTUMOR",
      "class": "file",
      "optional": true,
      "group": "App Settings"
    },
    {
      "name": "fasta_index",
      "label": "FASTA index (from samtools faidx)",
      "help": "The reference genome index generated by samtools. If not provided, app will use samtools create and return bam index files. RECOMMENDED",
      "class": "file",
      "patterns": ["*.fa.fai"],
      "optional": true,
      "group": "App Settings"
    },
    {
      "name": "bam_index_files",
      "label": "BAM Index File",
      "help": "If mappings are BAM files, provide a BAM index file for each mappings BAM file(s). BAM index file names must match BAM files (ex: file1.bam and file1.bam.bai). If not provided, app will sort (if assume_sorted is set to false) and index mappings BAM file, increasing runtime.",
      "class": "array:file",
      "patterns": ["*.bam.bai"],
      "optional": true,
      "group": "App Settings"
    },
    {
      "name": "breakdancer_calls_file",
      "label": "Breakdancer (or other SV) Calls File",
      "help": "Option to include calls from other SV methods such as BreakDancer to further increase sensitivity and specificity. BreakDancer result or calls from any methods must in the format: 'ChrA LocA stringA ChrB LocB stringB other'",
      "class": "file",
      "optional": true,
      "group": "Pindel Advanced Settings"
    },
    {
      "name": "assume_sorted",
      "label": "Assume Sorted",
      "help": "If assume_sorted is set to false AND bam index files are not given as input, app will run samtools sort on input (computationally expensive)",
      "class": "boolean",
      "default": true,
      "group": "App Settings"
    },
    {
      "name": "insert_size",
      "label": "Expected Average Insert Size",
      "help": "If no bam config file is provided as input to the app, app MUST be given an insert size (the length of sequence between the paired-end adapters in paired-end sequence) and app will automatically create a bam configuration file for pindel to use. If this bam was not produced by BWA, this option will be ignored.",
      "class": "int",
      "optional": true,
      "group": "App Settings"
    },
    {
      "name": "chromosome",
      "label": "Chromosome To Process",
      "help": "Which chr/fragment. Chromosome name must be the same as in reference sequence and in read file. Default (ALL) will loop over all chromosomes. The search for indels and SVs can also be limited to a specific region;\n 20:10,000,000 will only look for indels and SVs after position 10,000,000 == [10M, end] \n-c 20:5,000,000-15,000,000 will report indels in the range between and including the bases at position 5,000,000 and 15,000,000 = [5M, 15M]",
      "class": "string",
      "optional": true,
      "group": "App Settings"
    },
    {
      "name": "bam_not_produced_by_bwa",
      "label": "BAM Not Produced by BWA",
      "help": "If set as true, sequence_platform MUST ALSO be set as input. Only set as true if a) BAM file was generated by either Illumina-PairEnd or Illumina-MatePair AND IF another aligner than BWA was used to generate bam file. The reads will be converted to pindel input format using sam2pindel.cpp. Sam2pindel expects a mapping location of mate read if the query is unmapped while the mate has been mapped. Users may need to fix the information about mate reads for some mappers such as bowtie.",
      "class": "boolean",
      "default": false,
      "group": "App Settings"
    },
    {
      "name": "sequence_platform",
      "label": "Sequence Platform",
      "help": "If bam_not_produced_by_bwa is set to true, this input MUST be provided. Pindel's built in sam2pindel conversion takes as input sequence_platform information and supports only Illumina-MatePair or Illumina-PairEnd produced BAM files",
      "class": "string",
      "optional": true,
      "choices": [
        "Illumina-MatePair",
        "Illumina-PairEnd"
      ],
      "group": "App Settings"
    },
    {
      "name": "output_prefix",
      "label": "Output Prefix",
      "help": "Output Prefix. Default will be the name of the input file",
      "class": "string",
      "optional": true,
      "group": "App Settings"
    },
    {
      "name": "num_instances",
      "label": "Number of Instances",
      "help": "The number of subjobs Pindel can be split into. More threads assures lower runtime, but will spawn new instances. NOTE: If report_interchrom_events is True (default behavior) or only one chromosome or region is specified in 'chromosome' input, Pindel will only run on one instance regardless of input.",
      "class": "int",
      "optional": true,
      "group": "App Settings"
    },
    {
      "name": "num_threads_per_instance",
      "label": "Number of Threads",
      "help": "The number threads per instance that Pindel will run. More threads assures lower runtime but will not guarantee same results.",
      "class": "int",
      "optional": true,
      "group": "App Settings"
    },
    {
      "name": "export_vcf",
      "label": "Export as VCF",
      "help": "If true, Pindel will ALSO export short insertion, deletion, inversion, and tandem duplication variants as a single VCF file. Long insertion and break point files will be returned as Pindel files (not currently supported by pindel's VCF converter). NOTE: Export GATK Compatible VCF option must also be true if you wish to use VCF files with GATK tools.",
      "class": "boolean",
      "default": true,
      "group": "App Settings"
    },
    {
      "name": "vcf_gatk_compatible",
      "label": "Export GATK Compatible VCF",
      "help": "If TRUE, VCF will also be outputted and the -G (GATK) compatibility option will be used in the pindel2vcf converter and it's possible that this format is not compatible with other VCF-reading software. Also note that GATK requires genotypes to be 0/0, 0/1 or 1/1 instead of undefined, like ./1 or . ('not detected'). However, since pindel cannot yet genotype events (distinguish between 0/1 and 1/1) all events are called as 0/0 (not found) or 0/1, even while some may very well be homozygous alternative (1/1). \nIf FALSE, the -G (GATK) compatibility option will not be used; while this allows Pindel to indicate the uncertainty in genotypes, and should be compatible with most software, this format will not be compatible with GATK pipelines and tools such as GATK ValidateVariants.",
      "class": "boolean",
      "default": false,
      "group": "App Settings"
    },
    {
      "name": "report_inversions",
      "label": "Report Inversions",
      "class": "boolean",
      "default": true,
      "group": "Pindel Advanced Settings"
    },
    {
      "name": "report_duplications",
      "label": "Report Tandem Duplications",
      "class": "boolean",
      "default": true,
      "group": "Pindel Advanced Settings"
    },
    {
      "name": "report_long_insertions",
      "label": "Report Long Insertions",
      "help": "Report insertions of which the full sequence cannot be deduced because of their length",
      "class": "boolean",
      "default": true,
      "group": "Pindel Advanced Settings"
    },
    {
      "name": "report_read_pair",
      "label": "Report Discordant Read Pair",
      "help": "Search for discordant read-pair to improve sensitivity.",
      "class": "boolean",
      "default": true,
      "group": "Pindel Advanced Settings"
    },
    {
      "name": "report_breakpoints",
      "label": "Report Breakpoints",
      "class": "boolean",
      "default": true,
      "group": "Pindel Advanced Settings"
    },
    {
      "name": "report_close_mapped_reads",
      "label": "Report Close Mapped Reads",
      "help": "Report reads of which only one end (the one closest to the mapped read of the paired-end read) could be mapped",
      "class": "boolean",
      "default": false,
      "group": "Pindel Advanced Settings"
    },
    {
      "name": "report_only_close_mapped_reads",
      "label": "Return ONLY Close Mapped Reads",
      "help": "If true, Pindel will not search for SVs and only report reads of which only one end (the one closest to the mapped read of the paired-end read) could be mapped (the output file can then be used as an input file for another run of pindel, which may save size if you need to transfer files). Other files will be outputted as empty files.",
      "class": "boolean",
      "default": false,
      "group": "Pindel Advanced Settings"
    },
    {
      "name": "pindel_command_line",
      "label": "Pindel Advanced Command Line Options",
      "help": "If specified, pindel will run with the inputed options. App WILL input 'pindel -f <> -p <> -T <> -o <> [and/or -i <>] -r -t -l -k -s -S -I' according to app inputs. Users must input all OTHER command line options i.e. '-c <> -R <> -x <>'. Do not enter inputs already supplied by app.",
      "class": "string",
      "optional": true,
      "group": "Pindel Advanced Settings"
    },
    {
      "name": "export_vcf_advanced_options",
      "label": "pindel2vcf Command Line Arguments",
      "help": "If provided, app will run pindel2vcf script with the command line arguments provided as input and export output as VCF file. If not provided, default options and reference genome file name will be used. Please see app page for more details on input parameters. (ex: \"[-P -r -v -G inputs provided by app] -R <required name_and_version_of_reference_genome> -d <required date_of_reference_genome_version>  [-v -c -w -mc -he ... optional parameters]\")",
      "class": "string",
      "optional": true,
      "group": "App Settings"
    }
  ],
  "outputSpec": [
    {
      "name": "deletions",
      "label": "Pindel Detected Deletions",
      "class": "file"
    },
    {
      "name": "short_inserts",
      "label": "Pindel Detected Short Insertions",
      "class": "file"
    },
    {
      "name": "inversions",
      "label": "Pindel Detected Inversions",
      "help": "Output will be empty IF report_inversions (app input) is set to false",
      "class": "file"
    },
    {
      "name": "tandem_duplications",
      "label": "Pindel Detected Tandem Duplications",
      "help": "Output will be empty IF report_duplications (app input) is set to false",
      "class": "file"
    },
    {
      "name": "large_inserts",
      "label": "Pindel Detected Large Insertions",
      "help": "Output will be empty IF report_long_insertions (app input) is set to false",
      "class": "file"
    },
    {
      "name": "breakpoints",
      "label": "Pindel Detected Unassigned Breakpoints",
      "help": "Output will be empty IF report_breakpoints (app input) is set to false",
      "class": "file"
    },
    {
      "name": "close_mapped_reads",
      "label": "Pindel Detected Close Mapped Reads",
      "help": "Output will be empty UNLESS report_close_mapped_reads or report_only_close_mapped_reads (app input) is set to true",
      "class": "file",
      "optional": true
    },
    {
      "name": "vcf",
      "label": "Pindel Variants (VCF)",
      "help": "If true, VCF will be outputed in addition to pindel outputs. Currently pindel2vcf converter does not support large inserts and breakpoint file conversions.",
      "class": "file",
      "optional": true
    },
    {
      "name": "sortedbam_and_index_files",
      "label": "Sorted BAM Index Files",
      "help": "If app sorts and indexes BAM files, will upload BAM Index(es) [and sorted BAM(s) if assume_sorted=False] to platform for use in future analyses.",
      "class": "array:file",
      "optional": true
    }
  ],
  "runSpec": {
    "interpreter": "python2.7",
    "distribution": "Ubuntu",
    "release": "14.04",
    "version": "0",
    "file": "src/code.py"
  },
  "details": {
    "upstreamAuthor": "Carmelina Charalambous",
    "contactOrgs": [
      "org-dnanexus"
    ],
    "repoUrl": "git@github.com:dnanexus:pindel.git",
    "citations": [
      "doi: 10.1093/bioinformatics/btp394"
    ],
    "upstreamUrl": "https://github.com/genome/pindel/",
    "upstreamVersion": "0.2.5a7 (commit 884fb3d)",
    "upstreamLicences": [
      "GPLv3"
    ]
  },
  "ignoreReuse": false,
  "regionalOptions": {
    "aws:eu-central-1": {
      "systemRequirements": {
        "main": {
          "instanceType": "mem1_ssd1_x4"
        }
      }
    }
  }
}
